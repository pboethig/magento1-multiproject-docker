<?php $this->addItem(new EcomDev_LayoutCompiler_Layout_Item_Include('customer_account'));
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist', 'name' => 'customer.wishlist', 'template' => 'wishlist/view.phtml'), 'customer.wishlist', 'my.account.wrapper', array()), false);
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTitle', 'translate' => 'title'), 'customer.wishlist', function ($block) { return $block->setTitle(Mage::helper('core')->__('My Wishlist')); }, array(0 => 'my.account.wrapper')), false);
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_items', 'name' => 'customer.wishlist.items', 'as' => 'items', 'template' => 'wishlist/item/list.phtml'), 'customer.wishlist.items', 'customer.wishlist', array(0 => 'my.account.wrapper')), false);
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_image', 'name' => 'customer.wishlist.item.image', 'template' => 'wishlist/item/column/image.phtml'), 'customer.wishlist.item.image', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.image');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_comment', 'name' => 'customer.wishlist.item.info', 'template' => 'wishlist/item/column/info.phtml'), 'customer.wishlist.item.info', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.info');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_button', 'name' => 'customer.wishlist.button.update', 'template' => 'wishlist/button/update.phtml'), 'customer.wishlist.button.update', 'customer.wishlist.item.info', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.button.update');
$this->addItemRelation($item, 'customer.wishlist.item.info');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_cart', 'name' => 'customer.wishlist.item.quantity', 'template' => 'wishlist/item/column/quantity.phtml'), 'customer.wishlist.item.quantity', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.quantity');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTitle', 'translate' => 'title'), 'customer.wishlist.item.quantity', function ($block) { return $block->setTitle(Mage::helper('core')->__('Qty')); }, array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.item.quantity');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_options', 'name' => 'customer.wishlist.item.options'), 'customer.wishlist.item.options', 'customer.wishlist.item.quantity', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.item.options');
$this->addItemRelation($item, 'customer.wishlist.item.quantity');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_cart', 'name' => 'customer.wishlist.item.price', 'template' => 'wishlist/item/column/price.phtml'), 'customer.wishlist.item.price', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.price');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTitle', 'translate' => 'title'), 'customer.wishlist.item.price', function ($block) { return $block->setTitle(Mage::helper('core')->__('Price')); }, array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.item.price');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_options', 'name' => 'customer.wishlist.item.options'), 'customer.wishlist.item.options', 'customer.wishlist.item.price', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.item.options');
$this->addItemRelation($item, 'customer.wishlist.item.price');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_cart', 'name' => 'customer.wishlist.item.cart', 'template' => 'wishlist/item/column/cart.phtml'), 'customer.wishlist.item.cart', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.cart');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_options', 'name' => 'customer.wishlist.item.options'), 'customer.wishlist.item.options', 'customer.wishlist.item.cart', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist', 2 => 'customer.wishlist.items')), false);
$this->addItemRelation($item, 'customer.wishlist.item.options');
$this->addItemRelation($item, 'customer.wishlist.item.cart');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_item_column_remove', 'name' => 'customer.wishlist.item.remove', 'template' => 'wishlist/item/column/remove.phtml'), 'customer.wishlist.item.remove', 'customer.wishlist.items', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.item.remove');
$this->addItemRelation($item, 'customer.wishlist.items');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/text_list', 'name' => 'customer.wishlist.buttons', 'as' => 'control_buttons'), 'customer.wishlist.buttons', 'customer.wishlist', array(0 => 'my.account.wrapper')), false);
$this->addItemRelation($item, 'customer.wishlist.buttons');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_button', 'name' => 'customer.wishlist.button.share', 'template' => 'wishlist/button/share.phtml'), 'customer.wishlist.button.share', 'customer.wishlist.buttons', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.button.share');
$this->addItemRelation($item, 'customer.wishlist.buttons');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_button', 'name' => 'customer.wishlist.button.toCart', 'template' => 'wishlist/button/tocart.phtml'), 'customer.wishlist.button.toCart', 'customer.wishlist.buttons', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.button.toCart');
$this->addItemRelation($item, 'customer.wishlist.buttons');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'wishlist/customer_wishlist_button', 'name' => 'customer.wishlist.button.update', 'template' => 'wishlist/button/update.phtml'), 'customer.wishlist.button.update', 'customer.wishlist.buttons', array(0 => 'my.account.wrapper', 1 => 'customer.wishlist')), false);
$this->addItemRelation($item, 'customer.wishlist.button.update');
$this->addItemRelation($item, 'customer.wishlist.buttons');
$this->addItemRelation($item, 'my.account.wrapper');
$this->addItemRelation($item, 'customer.wishlist');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'unsetChild'), 'right', function ($block) { return $block->unsetChild('wishlist_customer_sidebar'); }, array()), false);
$this->addItemRelation($item, 'right');