<?php $this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTemplate'), 'root', function ($block) { return $block->setTemplate('page/1column.phtml'); }, array()), false);
$this->addItemRelation($item, 'root');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addJs'), 'head', function ($block) { return $block->addJs('varien/product.js'); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addJs'), 'head', function ($block) { return $block->addJs('varien/configurable.js'); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addItem'), 'head', function ($block) { return $block->addItem('skin_js', 'js/lib/elevatezoom/jquery.elevateZoom-3.0.8.min.js'); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addItem'), 'head', function ($block) { return $block->addItem('js_css', 'calendar/calendar-win2k-1.css', '', ''); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addItem'), 'head', function ($block) { return $block->addItem('js', 'calendar/calendar.js', ''); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addItem'), 'head', function ($block) { return $block->addItem('js', 'calendar/calendar-setup.js', ''); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info', 'template' => 'catalog/product/view.phtml'), 'product.info', 'content', array()), false);
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view_media', 'name' => 'product.info.media', 'as' => 'media', 'template' => 'catalog/product/view/media.phtml'), 'product.info.media', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.media');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/text_list', 'name' => 'product.info.media.after', 'as' => 'after'), 'product.info.media.after', 'product.info.media', array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.media.after');
$this->addItemRelation($item, 'product.info.media');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/text_list', 'name' => 'alert.urls', 'as' => 'alert_urls', 'translate' => 'label'), 'alert.urls', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'alert.urls');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTierPriceTemplate'), 'product.info', function ($block) { return $block->setTierPriceTemplate('catalog/product/view/tierprices.phtml'); }, array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_list_upsell', 'name' => 'product.info.upsell', 'as' => 'upsell_products', 'template' => 'catalog/product/list/upsell.phtml'), 'product.info.upsell', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.upsell');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setColumnCount'), 'product.info.upsell', function ($block) { return $block->setColumnCount('6'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.upsell');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setItemLimit'), 'product.info.upsell', function ($block) { return $block->setItemLimit('upsell', '6'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.upsell');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view_additional', 'name' => 'product.info.additional', 'as' => 'product_additional_data'), 'product.info.additional', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.additional');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view_description', 'name' => 'product.description', 'as' => 'description', 'template' => 'catalog/product/view/description.phtml'), 'product.description', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.description');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addToParentGroup'), 'product.description', function ($block) { return $block->addToParentGroup('detailed_info'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.description');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTitle', 'translate' => 'value'), 'product.description', function ($block) { return $block->setTitle(Mage::helper('core')->__('Description')); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.description');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view_attributes', 'name' => 'product.attributes', 'as' => 'additional', 'template' => 'catalog/product/view/attributes.phtml'), 'product.attributes', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.attributes');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addToParentGroup'), 'product.attributes', function ($block) { return $block->addToParentGroup('detailed_info'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.attributes');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setTitle', 'translate' => 'value'), 'product.attributes', function ($block) { return $block->setTitle(Mage::helper('core')->__('Additional Information')); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.attributes');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_list_related', 'name' => 'catalog.product.related', 'as' => 'related_products', 'template' => 'catalog/product/list/related.phtml'), 'catalog.product.related', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'catalog.product.related');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info.addto', 'as' => 'addto', 'template' => 'catalog/product/view/addto.phtml'), 'product.info.addto', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.addto');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info.sharing', 'as' => 'sharing', 'template' => 'catalog/product/view/sharing.phtml'), 'product.info.sharing', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.sharing');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info.addtocart', 'as' => 'addtocart', 'template' => 'catalog/product/view/addtocart.phtml'), 'product.info.addtocart', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.addtocart');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/text_list', 'name' => 'product.info.extrahint', 'as' => 'extrahint', 'translate' => 'label'), 'product.info.extrahint', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.extrahint');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info.options.wrapper', 'as' => 'product_options_wrapper', 'template' => 'catalog/product/view/options/wrapper.phtml', 'translate' => 'label'), 'product.info.options.wrapper', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/template', 'name' => 'options_js', 'template' => 'catalog/product/view/options/js.phtml'), 'options_js', 'product.info.options.wrapper', array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'options_js');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view_options', 'name' => 'product.info.options', 'as' => 'product_options', 'template' => 'catalog/product/view/options.phtml'), 'product.info.options', 'product.info.options.wrapper', array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.options');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.info.options', function ($block) { return $block->addOptionRenderer('text', 'catalog/product_view_options_type_text', 'catalog/product/view/options/type/text.phtml'); }, array(0 => 'content', 1 => 'product.info', 2 => 'product.info.options.wrapper')), false);
$this->addItemRelation($item, 'product.info.options');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.info.options', function ($block) { return $block->addOptionRenderer('file', 'catalog/product_view_options_type_file', 'catalog/product/view/options/type/file.phtml'); }, array(0 => 'content', 1 => 'product.info', 2 => 'product.info.options.wrapper')), false);
$this->addItemRelation($item, 'product.info.options');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.info.options', function ($block) { return $block->addOptionRenderer('select', 'catalog/product_view_options_type_select', 'catalog/product/view/options/type/select.phtml'); }, array(0 => 'content', 1 => 'product.info', 2 => 'product.info.options.wrapper')), false);
$this->addItemRelation($item, 'product.info.options');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.info.options', function ($block) { return $block->addOptionRenderer('date', 'catalog/product_view_options_type_date', 'catalog/product/view/options/type/date.phtml'); }, array(0 => 'content', 1 => 'product.info', 2 => 'product.info.options.wrapper')), false);
$this->addItemRelation($item, 'product.info.options');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/html_calendar', 'name' => 'html_calendar', 'as' => 'html_calendar', 'template' => 'page/js/calendar.phtml'), 'html_calendar', 'product.info.options.wrapper', array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'html_calendar');
$this->addItemRelation($item, 'product.info.options.wrapper');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.info.options.wrapper.bottom', 'as' => 'product_options_wrapper_bottom', 'template' => 'catalog/product/view/options/wrapper/bottom.phtml', 'translate' => 'label'), 'product.info.options.wrapper.bottom', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'insert'), 'product.info.options.wrapper.bottom', function ($block) { return $block->insert('product.tierprices'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'catalog/product_view', 'name' => 'product.clone_prices', 'as' => 'prices', 'template' => 'catalog/product/view/price_clone.phtml'), 'product.clone_prices', 'product.info.options.wrapper.bottom', array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.clone_prices');
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.options.wrapper.bottom', function ($block) { return $block->append('product.info.addtocart'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.options.wrapper.bottom', function ($block) { return $block->append('product.info.addto'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.options.wrapper.bottom', function ($block) { return $block->append('product.info.sharing'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.options.wrapper.bottom');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/template_facade', 'name' => 'product.info.container1', 'as' => 'container1'), 'product.info.container1', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.container1');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setDataByKey'), 'product.info.container1', function ($block) { return $block->setDataByKey('alias_in_layout', 'container1'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container1');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setDataByKeyFromRegistry'), 'product.info.container1', function ($block) { return $block->setDataByKeyFromRegistry('options_container', 'product'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container1');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.container1', function ($block) { return $block->append('product.info.options.wrapper'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container1');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.container1', function ($block) { return $block->append('product.info.options.wrapper.bottom'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container1');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/template_facade', 'name' => 'product.info.container2', 'as' => 'container2'), 'product.info.container2', 'product.info', array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info.container2');
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setDataByKey'), 'product.info.container2', function ($block) { return $block->setDataByKey('alias_in_layout', 'container2'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container2');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setDataByKeyFromRegistry'), 'product.info.container2', function ($block) { return $block->setDataByKeyFromRegistry('options_container', 'product'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container2');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.container2', function ($block) { return $block->append('product.info.options.wrapper'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container2');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'append'), 'product.info.container2', function ($block) { return $block->append('product.info.options.wrapper.bottom'); }, array(0 => 'content', 1 => 'product.info')), false);
$this->addItemRelation($item, 'product.info.container2');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'product.info');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'unsetCallChild'), 'product.info', function ($block) { return $block->unsetCallChild('container1', 'ifEquals', '0', array(0 => 'alias_in_layout', 1 => 'options_container')); }, array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'unsetCallChild'), 'product.info', function ($block) { return $block->unsetCallChild('container2', 'ifEquals', '0', array(0 => 'alias_in_layout', 1 => 'options_container')); }, array(0 => 'content')), false);
$this->addItemRelation($item, 'product.info');
$this->addItemRelation($item, 'content');