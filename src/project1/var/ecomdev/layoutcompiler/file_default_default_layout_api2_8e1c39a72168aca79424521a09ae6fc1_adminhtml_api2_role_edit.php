<?php $this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'api2/adminhtml_roles_tabs', 'name' => 'adminhtml.role.edit.tabs'), 'adminhtml.role.edit.tabs', 'left', array()), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'api2/adminhtml_roles_tab_info', 'name' => 'adminhtml.role.edit.tab.info'), 'adminhtml.role.edit.tab.info', 'adminhtml.role.edit.tabs', array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tab.info');
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'api2/adminhtml_roles_tab_resources', 'name' => 'adminhtml.role.edit.tab.resources', 'template' => 'permissions/rolesedit.phtml'), 'adminhtml.role.edit.tab.resources', 'adminhtml.role.edit.tabs', array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tab.resources');
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'api2/adminhtml_roles_tab_users', 'name' => 'adminhtml.role.edit.tab.users'), 'adminhtml.role.edit.tab.users', 'adminhtml.role.edit.tabs', array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tab.users');
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addTab'), 'adminhtml.role.edit.tabs', function ($block) { return $block->addTab('api2_role_section_info', 'adminhtml.role.edit.tab.info'); }, array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addTab'), 'adminhtml.role.edit.tabs', function ($block) { return $block->addTab('api2_role_section_resources', 'adminhtml.role.edit.tab.resources'); }, array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addTab'), 'adminhtml.role.edit.tabs', function ($block) { return $block->addTab('roleUsersGrid', 'adminhtml.role.edit.tab.users'); }, array(0 => 'left')), false);
$this->addItemRelation($item, 'adminhtml.role.edit.tabs');
$this->addItemRelation($item, 'left');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'api2/adminhtml_roles_buttons', 'name' => 'adminhtml.roles.buttons'), 'adminhtml.roles.buttons', 'content', array()), false);
$this->addItemRelation($item, 'adminhtml.roles.buttons');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setCanLoadExtJs'), 'head', function ($block) { return $block->setCanLoadExtJs('1'); }, array()), false);
$this->addItemRelation($item, 'head');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'adminhtml/template', 'name' => 'adminhtml.role.js.users.grid', 'template' => 'api2/role/users_grid_js.phtml'), 'adminhtml.role.js.users.grid', 'js', array()), false);
$this->addItemRelation($item, 'adminhtml.role.js.users.grid');
$this->addItemRelation($item, 'js');