<?php $this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'adminhtml/catalog_product_composite_fieldset', 'name' => 'product.composite.fieldset', 'output' => 'toHtml'), 'product.composite.fieldset', null, array()), false);
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItemRelation($item, NULL);
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('name' => 'product.composite.fieldset.options', 'type' => 'adminhtml/catalog_product_composite_fieldset_options', 'template' => 'catalog/product/composite/fieldset/options.phtml'), 'product.composite.fieldset.options', 'product.composite.fieldset', array()), false);
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.composite.fieldset.options', function ($block) { return $block->addOptionRenderer('text', 'catalog/product_view_options_type_text', 'catalog/product/composite/fieldset/options/type/text.phtml'); }, array(0 => 'product.composite.fieldset')), false);
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.composite.fieldset.options', function ($block) { return $block->addOptionRenderer('file', 'catalog/product_view_options_type_file', 'catalog/product/composite/fieldset/options/type/file.phtml'); }, array(0 => 'product.composite.fieldset')), false);
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.composite.fieldset.options', function ($block) { return $block->addOptionRenderer('select', 'catalog/product_view_options_type_select', 'catalog/product/composite/fieldset/options/type/select.phtml'); }, array(0 => 'product.composite.fieldset')), false);
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addOptionRenderer'), 'product.composite.fieldset.options', function ($block) { return $block->addOptionRenderer('date', 'catalog/product_view_options_type_date', 'catalog/product/composite/fieldset/options/type/date.phtml'); }, array(0 => 'product.composite.fieldset')), false);
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'core/template', 'name' => 'product.composite.fieldset.options.js', 'as' => 'options_js', 'template' => 'catalog/product/composite/fieldset/options/js.phtml'), 'product.composite.fieldset.options.js', 'product.composite.fieldset.options', array(0 => 'product.composite.fieldset')), false);
$this->addItemRelation($item, 'product.composite.fieldset.options.js');
$this->addItemRelation($item, 'product.composite.fieldset.options');
$this->addItemRelation($item, 'product.composite.fieldset');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'adminhtml/catalog_product_composite_fieldset_qty', 'name' => 'product.composite.fieldset.qty', 'template' => 'catalog/product/composite/fieldset/qty.phtml'), 'product.composite.fieldset.qty', 'product.composite.fieldset', array()), false);
$this->addItemRelation($item, 'product.composite.fieldset.qty');
$this->addItemRelation($item, 'product.composite.fieldset');