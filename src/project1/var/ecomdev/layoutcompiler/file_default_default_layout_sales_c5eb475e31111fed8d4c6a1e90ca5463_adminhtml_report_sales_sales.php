<?php $this->addItem(new EcomDev_LayoutCompiler_Layout_Item_Include('report_sales'));
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'adminhtml/report_sales_sales', 'template' => 'report/grid/container.phtml', 'name' => 'sales.report.grid.container'), 'sales.report.grid.container', 'content', array()), false);
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'adminhtml/store_switcher', 'template' => 'report/store/switcher/enhanced.phtml', 'name' => 'store.switcher'), 'store.switcher', 'sales.report.grid.container', array(0 => 'content')), false);
$this->addItemRelation($item, 'store.switcher');
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setStoreVarName'), 'store.switcher', function ($block) { return $block->setStoreVarName('store_ids'); }, array(0 => 'content', 1 => 'sales.report.grid.container')), false);
$this->addItemRelation($item, 'store.switcher');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItem($item = new EcomDev_LayoutCompiler_Layout_Item_Block(array('type' => 'sales/adminhtml_report_filter_form_order', 'name' => 'grid.filter.form'), 'grid.filter.form', 'sales.report.grid.container', array(0 => 'content')), false);
$this->addItemRelation($item, 'grid.filter.form');
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItemRelation($item, 'content');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addReportTypeOption', 'translate' => 'value'), 'grid.filter.form', function ($block) { return $block->addReportTypeOption('created_at_order', Mage::helper('core')->__('Order Created Date')); }, array(0 => 'content', 1 => 'sales.report.grid.container')), false);
$this->addItemRelation($item, 'grid.filter.form');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'addReportTypeOption', 'translate' => 'value'), 'grid.filter.form', function ($block) { return $block->addReportTypeOption('updated_at_order', Mage::helper('core')->__('Order Updated Date')); }, array(0 => 'content', 1 => 'sales.report.grid.container')), false);
$this->addItemRelation($item, 'grid.filter.form');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'sales.report.grid.container');
$this->addItem($item = new EcomDev_LayoutCompiler_Model_Layout_Item_Action(array('method' => 'setFieldOption', 'translate' => 'value'), 'grid.filter.form', function ($block) { return $block->setFieldOption('report_type', 'note', Mage::helper('core')->__('Order Updated Date report is real-time, does not need statistics refreshing.')); }, array(0 => 'content', 1 => 'sales.report.grid.container')), false);
$this->addItemRelation($item, 'grid.filter.form');
$this->addItemRelation($item, 'content');
$this->addItemRelation($item, 'sales.report.grid.container');